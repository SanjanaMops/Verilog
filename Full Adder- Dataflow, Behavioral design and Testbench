//BEHAVIORAL DESIGN 

module FULL_ADDER(
  input wire A, B, Cin,
  output reg Sum, Cout
);
  
  always @ (A, B, Cin)
    begin 
      case({A, B, Cin})
        3'b000 : begin
          Sum = 0;
          Cout = 0;
        end
        3'b001 : begin
          Sum = 1;
          Cout = 0;
        end
        3'b010 : begin
          Sum = 1;
          Cout = 0;
        end
        3'b011 : begin
          Sum = 0;
          Cout = 1;
        end
        3'b100 : begin
          Sum = 1;
          Cout = 0;
        end
        3'b101 : begin
          Sum = 0;
          Cout = 1;
        end
        3'b110 : begin
          Sum = 0;
          Cout = 1;
        end
        3'b111 : begin
          Sum = 1;
          Cout = 1;
        end
        default : begin
          Sum = 0;
          Cout = 0;
        end
      endcase 
    end 
  
endmodule

//DATAFLOW DESIGN 

module FULL_ADDER(
  input wire A, B, Cin,
  output reg Sum, Cout
);
  assign Sum = A ^ B ^ Cin; 
  assign Cout = A & B | A & Cin | B & Cin;
  
endmodule

//TESTBENCH 

`timescale 1ns/1ps

module FULL_ADDER_TB;
  reg A, B, Cin;
  wire Sum, Cout;

  FULL_ADDER DUT(A, B, Cin, Sum, Cout);

  initial
    begin
      $dumpfile("dump.vcd");
      $dumpvars(0, FULL_ADDER_TB);
      $monitor($time, "A=%b, B=%b, Cin=%b, Sum=%b, Cout=%b", A, B, Cin, Sum, Cout);
      A = 0; B = 0; Cin = 0;
      #10 A = 0; B = 0; Cin = 0;
      #10 B = 1;
      #10 A = 1; 
      #10 A = 1; B = 0; Cin = 1;
      #10 A = 1; B = 1; Cin = 1;

      #30 $finish;
    end
endmodule

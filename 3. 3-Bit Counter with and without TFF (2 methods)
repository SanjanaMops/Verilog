//1st method 

module TFF(T,clk,reset,Q);
  input T,clk,reset;
  output reg Q; 
  
  always@(negedge clk)
    begin 
      if(reset)
        Q <= 1'b0;
      else 
        if(T)
          Q <= !Q;
      else 
        Q <= Q;
    end 
endmodule 

module counter(clk,reset,Q);
  input clk,reset;
  output reg [2:0]Q;
  
  TFF uut1(1,~clk,reset,Q[0]);
  TFF uut2(1,Q[0],reset,Q[1]);
  TFF uut3(1,Q[1],reset,Q[2]);
  
endmodule 

//2nd method 

`timescale 1ns/1ps

module counter(clk, reset, Q);
  input clk, reset;
  output reg [2:0] Q;
  
  always @(posedge clk) begin
    if (reset)
      Q <= 3'b0;
    else
      Q <= Q + 1;
  end
endmodule

//TESTBENCH 

`timescale 1ns/1ps

module tb;
  reg clk, reset;
  wire [2:0] Q;

  counter DUT(clk, reset, Q);

  always #10 clk = ~clk;

  initial begin
    $dumpfile("dump.vcd");
    $dumpvars(0, tb);
    $monitor($time, " clk=%b, reset=%b, Q=%b", clk, reset, Q);

    reset = 1;
    clk = 0;
    #5 reset = 0;

    #100; // Simulate for 100 time units

    $finish;
  end
endmodule
  

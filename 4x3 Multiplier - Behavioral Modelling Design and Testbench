//DESIGN 

module Multiplier_4x3 (
  input [3:0] A,
  input [2:0] B,
  output reg [7:0] Result
);

  wire [3:0] z1;
  wire [3:0] z2;
  wire [3:0] z3;
  wire [3:0] z4;

  assign z1 = A & {B[0], B[0], B[0], B[0]};
  assign z2 = A & {B[1], B[1], B[1], B[1]} << 1;
  assign z3 = A & {B[2], B[2], B[2], B[2]} << 2;
  assign z4 = A & {1'b0, 1'b0, 1'b0, B[2]};

  assign Result = z1 + z2 + z3 + z4;

endmodule

//TESTBENCH 

module Multiplier_4x3_TB;
  reg [3:0] A;
  reg [2:0] B;
  wire [7:0] Result;

  Multiplier_4x3 DUT(A,B,Result);

  initial begin
    $dumpfile("dump.vcd");
    $dumpvars(0, Multiplier_4x3_TB);
    $monitor($time, "A=%b, B=%b, Result=%b", A, B, Result);

    #10 A = 4'b0000; B = 3'b000;
    
    #10 A = 4'b0000; B = 3'b001;
    
    #10 A = 4'b0000; B = 3'b010;
    
    #10 A = 4'b0000; B = 3'b011;
    
    #30 $finish;
  end
endmodule
